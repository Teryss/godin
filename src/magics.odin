package main

import "core:fmt"

BISHOP_MAGICS : [64]u64 = {
    18018831494946945, 1134767471886336, 2308095375972630592, 27308574661148680,
    9404081239914275072, 4683886618770800641, 216245358743802048, 9571253153235970,
    27092002521253381, 1742811846410792, 8830470070272, 9235202921558442240,
    1756410529322199040, 1127005325142032, 1152928124311179269, 2377913937382869017,
    2314850493043704320, 4684324174200832257, 77688339246880000, 74309421802472544,
    8649444578941734912, 4758897525753456914, 18168888584831744, 2463750540959940880,
    9227893366251856128, 145276341141897348, 292821938185734161, 5190965918678714400,
    2419567834477633538, 2308272929927873024, 18173279030480900, 612771170333492228,
    4611976426970161409, 2270508834359424, 9223442681551127040, 144117389281722496,
    1262208579542270208, 13988180992906560530, 4649975687305298176, 9809420809726464128,
    1153222256471056394, 2901448468860109312, 40690797321924624, 4504295814726656,
    299204874469892, 594838215186186752, 7210408796106130432, 144405467744964672,
    145390656058359810, 1153203537948246016, 102002796048417802, 9243919728426124800,
    2455024885924167748, 72066815467061280, 325424741529814049, 1175584649085829253,
    18720594346444812, 584352516473913920, 1441151883179198496, 4919056693802862608,
    1161950831810052608, 2464735771073020416, 54610562058947072, 580611413180448,
}

ROOK_MAGICS : [64]u64 = {
    9979994641325359136, 90072129987412032, 180170925814149121, 72066458867205152,
    144117387368072224, 216203568472981512, 9547631759814820096, 2341881152152807680,
    140740040605696, 2316046545841029184, 72198468973629440, 81205565149155328,
    146508277415412736, 703833479054336, 2450098939073003648, 576742228899270912,
    36033470048378880, 72198881818984448, 1301692025185255936, 90217678106527746,
    324684134750365696, 9265030608319430912, 4616194016369772546, 2199165886724,
    72127964931719168, 2323857549994496000, 9323886521876609, 9024793588793472,
    562992905192464, 2201179128832, 36038160048718082, 36029097666947201,
    4629700967774814240, 306244980821723137, 1161084564161792, 110340390163316992,
    5770254227613696, 2341876206435041792, 82199497949581313, 144120019947619460,
    324329544062894112, 1152994210081882112, 13545987550281792, 17592739758089,
    2306414759556218884, 144678687852232706, 9009398345171200, 2326183975409811457,
    72339215047754240, 18155273440989312, 4613959945983951104, 145812974690501120,
    281543763820800, 147495088967385216, 2969386217113789440, 19215066297569792,
    180144054896435457, 2377928092116066437, 9277424307650174977, 4621827982418248737,
    563158798583922, 5066618438763522, 144221860300195844, 281752018887682,
}

@(private)
state : u32 = 1804289383 

get_random_u32 :: proc() -> u32 {
    num : u32 = state;
    num ~= (num << 13);
    num ~= (num >> 17);
    num ~= (num << 5);
    state = num;
    return state;
}

get_random_u64 :: proc() -> u64 {
    n1 : u64 = u64(get_random_u32() & 0xFFFF);
    n2 : u64 = u64(get_random_u32() & 0xFFFF);
    n3 : u64 = u64(get_random_u32() & 0xFFFF);
    n4 : u64 = u64(get_random_u32() & 0xFFFF);

    return n1 | (n2 << 16 ) | (n3 << 32) | (n4 << 48)
}

get_magic_candidate :: proc() -> u64 {
    return get_random_u64() & get_random_u64() & get_random_u64();
}

get_random_number :: #force_inline proc() -> u64 {
    return get_random_u64()
}

// Code for getting magic numbers

// get_magic_number :: proc(masks: ^S_Attack_masks, sqr: int, relevant_bits: int, bishop: bool) -> u64 {
//     occupancies : [4096]u64;
//     attacks : [4096]u64;
//     used_attacks : [4096]u64;
    
//     mask : u64 = bishop ? masks.bishop[sqr] : masks.rook[sqr];
//     occupancy_indicies : uint = 1 << uint(relevant_bits);
    
//     for i in 0..<occupancy_indicies{
//         occupancies[i] = set_occupancy(uint(i), uint(relevant_bits), mask);
//         attacks[i] = bishop ? mask_bishop_attacks_on_fly(u8(sqr), &occupancies[i]) :
//                             mask_rook_attacks_on_fly(u8(sqr), &occupancies[i]);
//     }

//     for _ in 0..<10000000{
//         magic_number := get_magic_candidate();

//         for i in 0..<4096{
//             used_attacks[i] = 0;
//         }

//         if count_bits(mask * magic_number & 0xFF00000000000000) < 6 { continue; }
//         fail : bool = false;
        
//         for i in 0..<occupancy_indicies{
//             magic_index : u64 = occupancies[i] * magic_number >> uint(64 - relevant_bits)

//             if used_attacks[magic_index] == 0{
//                 used_attacks[magic_index] = attacks[i];
//             }else if used_attacks[magic_index] != attacks[i]{
//                 fail = true;
//                 break;
//             }
//         }

//         if !fail{
//             return magic_number;
//         } 
//     }
//     return 0;
// }

// get_magics :: proc(masks: ^S_Attack_masks){
//     fmt.println("Rook magics:")
// 	for i in 0..<64{
// 		fmt.println(get_magic_number(masks, i, int(RELEVANT_OCCUPANCY_BITS_ROOK[i]), false),",")
// 	}
// 	fmt.println("\nBishop magics:")
// 	for i in 0..<64{
// 		fmt.println(get_magic_number(masks, i, int(RELEVANT_OCCUPANCY_BITS_BISHOP[i]), true),",")
// 	}
// }

